{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pettimart/Documents/GitHub/handbook/pages/index.js\";\nimport Head from 'next/head';\nimport Handbook from '../components/Handbook';\n\nfunction Index(_ref) {\n  var languages = _ref.languages;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Manas handbook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"initial-scale=1.0, width=device-width, user-scalable=no\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handbook, {\n      languages: languages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/pettimart/Documents/GitHub/handbook/pages/index.js"],"names":["Head","Handbook","Index","languages"],"mappings":";;;AAEA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAGA,SAASC,KAAT,OAA4B;AAAA,MAAZC,SAAY,QAAZA,SAAY;AAC1B,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;KAVQD,K;;AA2CT,eAAeA,KAAf","sourcesContent":["import fs from 'fs'\nimport { default as router} from 'path'\nimport Head from 'next/head'\nimport Handbook from '../components/Handbook'\nimport matter from 'gray-matter'\n\nfunction Index({languages}) {\n  return (\n    <>\n      <Head>\n        <title>Manas handbook</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width, user-scalable=no\" />\n      </Head>\n      <Handbook languages={languages}></Handbook>\n    </>\n  )\n}\n\nexport async function getStaticProps() {\n  const languages = {\n    en: getContents(router.join(process.cwd(), 'content/en')),\n    es: getContents(router.join(process.cwd(), 'content/es')),\n  }\n  return {\n    props: {\n      languages\n    }\n  }\n}\n\nfunction getContents(base, directory = '', level = 0, contents = []) {\n  const entries = fs.readdirSync(router.join(base, directory), {withFileTypes: true})\n  entries.forEach((entry, i) => {\n    const path = `${directory.length? `${directory}/` : ''}${entry.name}`\n    if(entry.isDirectory()) {\n      contents.push(...getContents(base, path, level + 1))\n    } else if (RegExp('^.*\\.md$').test(entry.name)) {\n      const file = matter(fs.readFileSync(router.join(base, path), 'utf8'))\n      contents.push({\n        level: level? level + (i? 1 : 0) : 1,\n        path,\n        data: file.data,\n        content: file.content\n      })\n    }\n  })\n  return contents\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}